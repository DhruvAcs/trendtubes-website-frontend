{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trevorb/Documents/VSCode Projects/trendtubes/components/accounts/accounts-list.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useAsync } from 'react-async';\nimport { BackendApi } from '../../utils/backend-api'; // import { default as faker } from 'faker';\n\nconst fetchAccounts = async () => {\n  const accountsResponse = await BackendApi.getAccounts();\n  const shoppyCacheResponse = await BackendApi.getShoppyProductCache();\n  if (!accountsResponse || !accountsResponse.data || !shoppyCacheResponse || !shoppyCacheResponse.data) throw new Error();\n  return accountsResponse.data.map((account, index) => shoppyCacheResponse.data[index] ? _objectSpread(_objectSpread({}, accountsResponse), {}, {\n    shoppyData: shoppyCacheResponse.data[index]\n  }) : account);\n};\n\nconst AccountsListItems = () => {\n  useEffect(() => {// mainContentRef.current!.style.marginTop = `${\n    // \theaderRef.current!.getBoundingClientRect().height\n    // }px)`;\n  }, []);\n  const {\n    data,\n    error\n  } = useAsync({\n    promiseFn: fetchAccounts\n  });\n\n  if (error) {}\n\n  if (data) {\n    console.log('fetch data', data);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n  return null;\n};\n\nexport default AccountsListItems; // export const getStaticProps = async () => {\n// \treturn {\n// \t\tprops: {},\n// \t};\n// };","map":{"version":3,"sources":["/home/trevorb/Documents/VSCode Projects/trendtubes/components/accounts/accounts-list.tsx"],"names":["React","useEffect","useAsync","BackendApi","fetchAccounts","accountsResponse","getAccounts","shoppyCacheResponse","getShoppyProductCache","data","Error","map","account","index","shoppyData","AccountsListItems","error","promiseFn","console","log"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAA2BC,SAA3B,QAAoD,OAApD;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B,C,CACA;;AAEA,MAAMC,aAAa,GAAG,YAAY;AACjC,QAAMC,gBAAgB,GAAG,MAAMF,UAAU,CAACG,WAAX,EAA/B;AACA,QAAMC,mBAAmB,GAAG,MAAMJ,UAAU,CAACK,qBAAX,EAAlC;AACA,MACC,CAACH,gBAAD,IACA,CAACA,gBAAgB,CAACI,IADlB,IAEA,CAACF,mBAFD,IAGA,CAACA,mBAAmB,CAACE,IAJtB,EAMC,MAAM,IAAIC,KAAJ,EAAN;AACD,SAAOL,gBAAgB,CAACI,IAAjB,CAAsBE,GAAtB,CAA0B,CAACC,OAAD,EAAUC,KAAV,KAChCN,mBAAmB,CAACE,IAApB,CAAyBI,KAAzB,oCACQR,gBADR;AAC0BS,IAAAA,UAAU,EAAEP,mBAAmB,CAACE,IAApB,CAAyBI,KAAzB;AADtC,OAEGD,OAHG,CAAP;AAKA,CAfD;;AAiBA,MAAMG,iBAAiB,GAAG,MAAM;AAC/Bd,EAAAA,SAAS,CAAC,MAAM,CACf;AACA;AACA;AACA,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAM;AAAEQ,IAAAA,IAAF;AAAQO,IAAAA;AAAR,MAAkBd,QAAQ,CAAC;AAAEe,IAAAA,SAAS,EAAEb;AAAb,GAAD,CAAhC;;AACA,MAAIY,KAAJ,EAAW,CACV;;AACD,MAAIP,IAAJ,EAAU;AACTS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BV,IAA1B;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,SAAO,IAAP;AACA,CAfD;;AAiBA,eAAeM,iBAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import Head from 'next/head';\nimport React, { createRef, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '../button';\nimport { useAsync } from 'react-async';\nimport { BackendApi } from '../../utils/backend-api';\n// import { default as faker } from 'faker';\n\nconst fetchAccounts = async () => {\n\tconst accountsResponse = await BackendApi.getAccounts();\n\tconst shoppyCacheResponse = await BackendApi.getShoppyProductCache();\n\tif (\n\t\t!accountsResponse ||\n\t\t!accountsResponse.data ||\n\t\t!shoppyCacheResponse ||\n\t\t!shoppyCacheResponse.data\n\t)\n\t\tthrow new Error();\n\treturn accountsResponse.data.map((account, index) =>\n\t\tshoppyCacheResponse.data[index]\n\t\t\t? { ...accountsResponse, shoppyData: shoppyCacheResponse.data[index] }\n\t\t\t: account\n\t);\n};\n\nconst AccountsListItems = () => {\n\tuseEffect(() => {\n\t\t// mainContentRef.current!.style.marginTop = `${\n\t\t// \theaderRef.current!.getBoundingClientRect().height\n\t\t// }px)`;\n\t}, []);\n\tconst { data, error } = useAsync({ promiseFn: fetchAccounts });\n\tif (error) {\n\t}\n\tif (data) {\n\t\tconsole.log('fetch data', data);\n\t\treturn <ul>{/* {data.accounts.map()} */}</ul>;\n\t}\n\n\treturn null;\n};\n\nexport default AccountsListItems;\n\n// export const getStaticProps = async () => {\n// \treturn {\n// \t\tprops: {},\n// \t};\n// };\n"]},"metadata":{},"sourceType":"module"}