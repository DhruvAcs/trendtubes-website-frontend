{"ast":null,"code":"import _classCallCheck from \"/home/trevorb/Documents/VSCode Projects/statuscord/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/home/trevorb/Documents/VSCode Projects/statuscord/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { createContext } from 'react'; // import { FilteredResultsAction } from '../reducers/FilteredResultsReducer';\n\n// import { CartItem, CartItems, CartReducer } from \"../reducers/CartReducer\";\nimport { nanoid } from 'nanoid';\n\nvar Scene = function Scene(_ref) {\n  var display = _ref.display,\n      previewImage = _ref.previewImage,\n      sceneObject = _ref.sceneObject;\n\n  _classCallCheck(this, Scene);\n\n  _defineProperty(this, \"id\", void 0);\n\n  _defineProperty(this, \"display\", void 0);\n\n  _defineProperty(this, \"previewImage\", void 0);\n\n  _defineProperty(this, \"sceneObject\", void 0);\n\n  this.id = nanoid(12);\n  this.display = display;\n  this.previewImage = previewImage;\n  this.sceneObject = sceneObject;\n};\n\nvar SceneManager = function SceneManager(_ref2) {\n  var scenes = _ref2.scenes;\n\n  _classCallCheck(this, SceneManager);\n\n  _defineProperty(this, \"scenes\", void 0);\n\n  this.scenes = scenes || [];\n};\n\nvar contextProps = {\n  previewStatus: null,\n  setPreviewStatus: null,\n  editorInputs: [],\n  sceneManager: new SceneManager({\n    scenes: null\n  })\n};\nvar EditorContext = /*#__PURE__*/createContext(contextProps);\nexport default EditorContext;\nexport { Scene, SceneManager };","map":{"version":3,"sources":["/home/trevorb/Documents/VSCode Projects/statuscord/react/editor-context.ts"],"names":["createContext","nanoid","Scene","display","previewImage","sceneObject","id","SceneManager","scenes","contextProps","previewStatus","setPreviewStatus","editorInputs","sceneManager","EditorContext"],"mappings":";;AAEA,SAASA,aAAT,QAA8B,OAA9B,C,CACA;;AAGA;AACA,SAASC,MAAT,QAAuB,QAAvB;;IASMC,K,GAML,qBAAgE;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,YAAyC,QAAzCA,YAAyC;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAC/D,OAAKC,EAAL,GAAUL,MAAM,CAAC,EAAD,CAAhB;AACA,OAAKE,OAAL,GAAeA,OAAf;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACA,C;;IAGIE,Y,GAGL,6BAAoD;AAAA,MAAtCC,MAAsC,SAAtCA,MAAsC;;AAAA;;AAAA;;AACnD,OAAKA,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACA,C;;AAaF,IAAMC,YAAsB,GAAG;AAC9BC,EAAAA,aAAa,EAAE,IADe;AAE9BC,EAAAA,gBAAgB,EAAG,IAFW;AAK9BC,EAAAA,YAAY,EAAE,EALgB;AAM9BC,EAAAA,YAAY,EAAE,IAAIN,YAAJ,CAAiB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjB;AANgB,CAA/B;AASA,IAAMM,aAAa,gBAAGd,aAAa,CAAWS,YAAX,CAAnC;AAEA,eAAeK,aAAf;AACA,SAASZ,KAAT,EAAgBK,YAAhB","sourcesContent":["import { SetStateAction } from 'react';\nimport { Dispatch } from 'react';\nimport { createContext } from 'react';\n// import { FilteredResultsAction } from '../reducers/FilteredResultsReducer';\nimport DiscordStatus from './discord-status';\nimport { EditorInputType } from './editor-input';\n// import { CartItem, CartItems, CartReducer } from \"../reducers/CartReducer\";\nimport { nanoid } from 'nanoid';\n\ninterface SceneProps {\n\t// id: string;\n\tdisplay: string;\n\tpreviewImage: String | Blob;\n\tsceneObject: HTMLElement | null;\n}\n\nclass Scene {\n\tid: string;\n\tdisplay: string;\n\tpreviewImage: String | Blob;\n\tsceneObject: HTMLElement | null;\n\n\tconstructor({ display, previewImage, sceneObject }: SceneProps) {\n\t\tthis.id = nanoid(12);\n\t\tthis.display = display;\n\t\tthis.previewImage = previewImage;\n\t\tthis.sceneObject = sceneObject;\n\t}\n}\n\nclass SceneManager {\n\tscenes: Scene[];\n\n\tconstructor({ scenes }: { scenes: Scene[] | null }) {\n\t\tthis.scenes = scenes || [];\n\t}\n}\n\ninterface IContext {\n\tpreviewStatus: DiscordStatus | null;\n\tsetPreviewStatus: Dispatch<SetStateAction<DiscordStatus | null>>;\n\teditorInputs: {\n\t\tkey: { internal: string; display: string };\n\t\ttype: EditorInputType;\n\t}[];\n\tsceneManager: SceneManager;\n}\n\nconst contextProps: IContext = {\n\tpreviewStatus: null,\n\tsetPreviewStatus: (null as unknown) as Dispatch<\n\t\tSetStateAction<DiscordStatus | null>\n\t>,\n\teditorInputs: [],\n\tsceneManager: new SceneManager({ scenes: null }),\n};\n\nconst EditorContext = createContext<IContext>(contextProps);\n\nexport default EditorContext;\nexport { Scene, SceneManager };\n"]},"metadata":{},"sourceType":"module"}