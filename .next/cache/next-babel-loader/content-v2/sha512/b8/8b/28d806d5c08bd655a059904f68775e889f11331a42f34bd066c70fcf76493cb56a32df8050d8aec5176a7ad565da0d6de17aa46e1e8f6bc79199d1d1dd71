{"ast":null,"code":"import axios from 'axios';\nconst API_PREURL = 'http://localhost:3005'; // axios.defaults.withCredentials = true;\n\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\nconst BackendApi = {\n  getShoppyProductCache: () => {\n    return axios.get(API_PREURL + '/shoppy/cache/products');\n  },\n  getAccounts: () => {\n    return axios.get(API_PREURL + '/accounts');\n  },\n  getAccount: id => {\n    return axios.get(API_PREURL + '/accounts/' + id);\n  },\n  createAccount: body => {\n    return axios.post(API_PREURL + '/accounts', body);\n  },\n  editAccount: (id, body) => {\n    return axios.post(API_PREURL + '/accounts/' + id, body);\n  },\n  getServices: () => {\n    return axios.get(API_PREURL + '/services');\n  },\n  getService: id => {\n    return axios.get(API_PREURL + '/services/' + id);\n  },\n  editService: (id, body) => {\n    // {\n    // \t// headers: {\n    // \t// \t// 'Access-Control-Allow-Origin': '*',\n    // \t// \t// 'Content-Type': 'application/x-www-form-urlencoded',\n    // \t// },\n    // \t// headers: {\n    // \t// \tAccept: 'application/json',\n    // \t// \t'Content-Type': 'application/json',\n    // \t// },\n    // }\n    {// headers: {\n      // \t'Content-Type': 'application/x-www-form-urlencoded',\n      // \tAccept: 'text/json',\n      // },\n      // headers: {\n      // \t'Content-Type': 'application/x-www-form-urlencoded',\n      // },\n      // crossdomain: true,\n    }\n    return axios.post(API_PREURL + '/services/' + id, body);\n  },\n  getCMSPath: path => {\n    console.log('getcmspath', path);\n    return axios.get(API_PREURL + '/cms/', {\n      params: {\n        path: path\n      }\n    });\n  }\n};\nexport { BackendApi };","map":{"version":3,"sources":["/home/trevorb/Documents/VSCode Projects/trendtubes/utils/backend-api.ts"],"names":["axios","API_PREURL","defaults","headers","post","BackendApi","getShoppyProductCache","get","getAccounts","getAccount","id","createAccount","body","editAccount","getServices","getService","editService","getCMSPath","path","console","log","params"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAEA,MAAMC,UAAU,GAAG,uBAAnB,C,CACA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,6BAA5B,IAA6D,GAA7D;AAEA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,qBAAqB,EAAE,MAAM;AAC5B,WAAON,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,wBAAvB,CAAP;AACA,GAHiB;AAIlBO,EAAAA,WAAW,EAAE,MAAM;AAClB,WAAOR,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,WAAvB,CAAP;AACA,GANiB;AAOlBQ,EAAAA,UAAU,EAAGC,EAAD,IAAQ;AACnB,WAAOV,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,YAAb,GAA4BS,EAAtC,CAAP;AACA,GATiB;AAUlBC,EAAAA,aAAa,EAAGC,IAAD,IAAU;AACxB,WAAOZ,KAAK,CAACI,IAAN,CAAWH,UAAU,GAAG,WAAxB,EAAqCW,IAArC,CAAP;AACA,GAZiB;AAalBC,EAAAA,WAAW,EAAE,CAACH,EAAD,EAAKE,IAAL,KAAc;AAC1B,WAAOZ,KAAK,CAACI,IAAN,CAAWH,UAAU,GAAG,YAAb,GAA4BS,EAAvC,EAA2CE,IAA3C,CAAP;AACA,GAfiB;AAgBlBE,EAAAA,WAAW,EAAE,MAAM;AAClB,WAAOd,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,WAAvB,CAAP;AACA,GAlBiB;AAmBlBc,EAAAA,UAAU,EAAGL,EAAD,IAAQ;AACnB,WAAOV,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,YAAb,GAA4BS,EAAtC,CAAP;AACA,GArBiB;AAsBlBM,EAAAA,WAAW,EAAE,CAACN,EAAD,EAAKE,IAAL,KAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,WAAOZ,KAAK,CAACI,IAAN,CAAWH,UAAU,GAAG,YAAb,GAA4BS,EAAvC,EAA2CE,IAA3C,CAAP;AACA,GA7CiB;AA8ClBK,EAAAA,UAAU,EAAGC,IAAD,IAAU;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACA,WAAOlB,KAAK,CAACO,GAAN,CAAUN,UAAU,GAAG,OAAvB,EAAgC;AAAEoB,MAAAA,MAAM,EAAE;AAAEH,QAAAA,IAAI,EAAEA;AAAR;AAAV,KAAhC,CAAP;AACA;AAjDiB,CAAnB;AAoDA,SAASb,UAAT","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\n\nconst API_PREURL = 'http://localhost:3005';\n// axios.defaults.withCredentials = true;\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nconst BackendApi = {\n\tgetShoppyProductCache: () => {\n\t\treturn axios.get(API_PREURL + '/shoppy/cache/products');\n\t},\n\tgetAccounts: () => {\n\t\treturn axios.get(API_PREURL + '/accounts');\n\t},\n\tgetAccount: (id) => {\n\t\treturn axios.get(API_PREURL + '/accounts/' + id);\n\t},\n\tcreateAccount: (body) => {\n\t\treturn axios.post(API_PREURL + '/accounts', body);\n\t},\n\teditAccount: (id, body) => {\n\t\treturn axios.post(API_PREURL + '/accounts/' + id, body);\n\t},\n\tgetServices: () => {\n\t\treturn axios.get(API_PREURL + '/services');\n\t},\n\tgetService: (id) => {\n\t\treturn axios.get(API_PREURL + '/services/' + id);\n\t},\n\teditService: (id, body) => {\n\t\t// {\n\t\t// \t// headers: {\n\t\t// \t// \t// 'Access-Control-Allow-Origin': '*',\n\t\t// \t// \t// 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t// \t// },\n\t\t// \t// headers: {\n\t\t// \t// \tAccept: 'application/json',\n\t\t// \t// \t'Content-Type': 'application/json',\n\t\t// \t// },\n\t\t// }\n\n\t\t{\n\t\t\t// headers: {\n\t\t\t// \t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t// \tAccept: 'text/json',\n\t\t\t// },\n\t\t\t// headers: {\n\t\t\t// \t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t// },\n\t\t\t// crossdomain: true,\n\t\t}\n\t\treturn axios.post(API_PREURL + '/services/' + id, body);\n\t},\n\tgetCMSPath: (path) => {\n\t\tconsole.log('getcmspath', path);\n\t\treturn axios.get(API_PREURL + '/cms/', { params: { path: path } });\n\t},\n};\n\nexport { BackendApi };\n"]},"metadata":{},"sourceType":"module"}