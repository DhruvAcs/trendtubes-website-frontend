{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trevorb/Documents/VSCode Projects/marketplace-frontend/components/button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport tailwindConfig from '../tailwind.config';\n\nconst Button = ({\n  children,\n  className,\n  size,\n  style,\n  href\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    style: style,\n    className: `button bg-primary-color ${(size || '') == 'small' ? 'py-2 px-4 text-base rounded-md' : (size || '') == 'xs' ? 'py-2 px-4 text-sm rounded-md' : 'py-3 px-6 text-base rounded-md'} w-fit text-primary-text font-bold flex items-center justify-center ${className || ''}`,\n    href: href,\n    children: children || 'No text'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\nconst OutlineButton = (_ref) => {\n  let {\n    children,\n    className,\n    size,\n    style,\n    href\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"size\", \"style\", \"href\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"a\", _objectSpread(_objectSpread({\n    className: `button border-primary-color ${(size || '') == 'sm' || (size || '') == 'small' ? 'py-2 px-4 text-base rounded-md' : (size || '') == 'xs' ? 'py-2 px-4 text-sm rounded-md' : 'py-3 px-6 text-base rounded-md'} w-fit text-primary-color font-bold rounded-md flex items-center justify-center hover:text-primary-text hover:bg-primary-color ${className || ''}`,\n    style: {\n      boxShadow: `inset 0px 0px 0px 2px ${tailwindConfig.theme.extend.colors['primary-color']}`\n    },\n    href: href\n  }, props), {}, {\n    children: children || 'No text'\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\nexport { Button, OutlineButton };","map":{"version":3,"sources":["/home/trevorb/Documents/VSCode Projects/marketplace-frontend/components/button.tsx"],"names":["tailwindConfig","Button","children","className","size","style","href","OutlineButton","props","boxShadow","theme","extend","colors"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACfC,EAAAA,QADe;AAEfC,EAAAA,SAFe;AAGfC,EAAAA,IAHe;AAIfC,EAAAA,KAJe;AAKfC,EAAAA;AALe,CAAD,KAYT;AACL,sBACC;AACC,IAAA,KAAK,EAAED,KADR;AAEC,IAAA,SAAS,EAAG,2BACX,CAACD,IAAI,IAAI,EAAT,KAAgB,OAAhB,GACG,gCADH,GAEG,CAACA,IAAI,IAAI,EAAT,KAAgB,IAAhB,GACA,8BADA,GAEA,gCACH,uEACAD,SAAS,IAAI,EACb,EAVF;AAWC,IAAA,IAAI,EAAEG,IAXP;AAAA,cAaEJ,QAAQ,IAAI;AAbd;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CA9BD;;AA8CA,MAAMK,aAAa,GAAG,UAOI;AAAA,MAPH;AACtBL,IAAAA,QADsB;AAEtBC,IAAAA,SAFsB;AAGtBC,IAAAA,IAHsB;AAItBC,IAAAA,KAJsB;AAKtBC,IAAAA;AALsB,GAOG;AAAA,MADtBE,KACsB;;AACzB,sBACC;AACC,IAAA,SAAS,EAAG,+BACX,CAACJ,IAAI,IAAI,EAAT,KAAgB,IAAhB,IAAwB,CAACA,IAAI,IAAI,EAAT,KAAgB,OAAxC,GACG,gCADH,GAEG,CAACA,IAAI,IAAI,EAAT,KAAgB,IAAhB,GACA,8BADA,GAEA,gCACH,kIACAD,SAAS,IAAI,EACb,EATF;AAUC,IAAA,KAAK,EAAE;AACNM,MAAAA,SAAS,EAAG,yBAAwBT,cAAc,CAACU,KAAf,CAAqBC,MAArB,CAA4BC,MAA5B,CAAmC,eAAnC,CAAoD;AADlF,KAVR;AAaC,IAAA,IAAI,EAAEN;AAbP,KAcKE,KAdL;AAAA,cAgBEN,QAAQ,IAAI;AAhBd;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CA5BD;;AA8BA,SAASD,MAAT,EAAiBM,aAAjB","sourcesContent":["import { ReactNode } from 'react';\nimport tailwindConfig from '../tailwind.config';\n\nconst Button = ({\n\tchildren,\n\tclassName,\n\tsize,\n\tstyle,\n\thref,\n}: {\n\tchildren?: ReactNode;\n\tclassName?: string;\n\tsize?: string;\n\tstyle?: React.CSSProperties;\n\thref?: string;\n}) => {\n\treturn (\n\t\t<a\n\t\t\tstyle={style}\n\t\t\tclassName={`button bg-primary-color ${\n\t\t\t\t(size || '') == 'small'\n\t\t\t\t\t? 'py-2 px-4 text-base rounded-md'\n\t\t\t\t\t: (size || '') == 'xs'\n\t\t\t\t\t? 'py-2 px-4 text-sm rounded-md'\n\t\t\t\t\t: 'py-3 px-6 text-base rounded-md'\n\t\t\t} w-fit text-primary-text font-bold flex items-center justify-center ${\n\t\t\t\tclassName || ''\n\t\t\t}`}\n\t\t\thref={href}\n\t\t>\n\t\t\t{children || 'No text'}\n\t\t</a>\n\t);\n};\n\ninterface OutlineButtonProps\n\t// extends React.InputHTMLAttributes<HTMLAnchorElement> {\n\textends React.DetailedHTMLProps<\n\t\tReact.AnchorHTMLAttributes<any>,\n\t\tHTMLAnchorElement\n\t> {\n\tchildren?: ReactNode;\n\tclassName?: string;\n\t// style: any;\n\tsize?: string;\n\tstyle?: React.CSSProperties;\n\thref?: string;\n}\n\nconst OutlineButton = ({\n\tchildren,\n\tclassName,\n\tsize,\n\tstyle,\n\thref,\n\t...props\n}: OutlineButtonProps) => {\n\treturn (\n\t\t<a\n\t\t\tclassName={`button border-primary-color ${\n\t\t\t\t(size || '') == 'sm' || (size || '') == 'small'\n\t\t\t\t\t? 'py-2 px-4 text-base rounded-md'\n\t\t\t\t\t: (size || '') == 'xs'\n\t\t\t\t\t? 'py-2 px-4 text-sm rounded-md'\n\t\t\t\t\t: 'py-3 px-6 text-base rounded-md'\n\t\t\t} w-fit text-primary-color font-bold rounded-md flex items-center justify-center hover:text-primary-text hover:bg-primary-color ${\n\t\t\t\tclassName || ''\n\t\t\t}`}\n\t\t\tstyle={{\n\t\t\t\tboxShadow: `inset 0px 0px 0px 2px ${tailwindConfig.theme.extend.colors['primary-color']}`,\n\t\t\t}}\n\t\t\thref={href}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children || 'No text'}\n\t\t</a>\n\t);\n};\n\nexport { Button, OutlineButton };\n"]},"metadata":{},"sourceType":"module"}